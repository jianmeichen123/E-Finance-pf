<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dsh.m.dao.CustomerGoodsMapper">
  <resultMap id="BaseResultMap" type="com.dsh.m.model.CustomerGoods">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 30 16:44:39 CST 2015.
    -->
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="customerid" jdbcType="INTEGER" property="customerid" />
    <result column="goodsid" jdbcType="INTEGER" property="goodsid" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="sequence" jdbcType="INTEGER" property="sequence" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="lastdate" jdbcType="DATE" property="lastdate" />
    <result column="createuser" jdbcType="INTEGER" property="createuser" />
    <result column="createtime" jdbcType="DATE" property="createtime" />
    <result column="updateuser" jdbcType="INTEGER" property="updateuser" />
    <result column="updatetime" jdbcType="DATE" property="updatetime" />
    <result column="zyx1" jdbcType="DECIMAL" property="zyx1" />
    <result column="zyx2" jdbcType="DECIMAL" property="zyx2" />
    <result column="zyx3" jdbcType="INTEGER" property="zyx3" />
    <result column="zyx4" jdbcType="VARCHAR" property="zyx4" />
    <result column="zyx5" jdbcType="VARCHAR" property="zyx5" />
    <result column="ts" jdbcType="VARCHAR" property="ts" />
    <result column="dr" jdbcType="CHAR" property="dr" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 30 16:44:39 CST 2015.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 30 16:44:39 CST 2015.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 30 16:44:39 CST 2015.
    -->
    id, customerid, goodsid, unit, sequence, count, money, lastdate, createuser, createtime, 
    updateuser, updatetime, zyx1, zyx2, zyx3, zyx4, zyx5, ts, dr
  </sql>
  <select id="selectByExample" parameterType="com.dsh.m.model.CustomerGoodsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 30 16:44:39 CST 2015.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart &gt;=0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.dsh.m.model.CustomerGoodsExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 30 16:44:39 CST 2015.
    -->
    delete from customer_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dsh.m.model.CustomerGoods">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 30 16:44:39 CST 2015.
    -->
    insert into customer_goods (id, customerid, goodsid, 
      unit, sequence, count, 
      money, lastdate, createuser, 
      createtime, updateuser, updatetime, 
      zyx1, zyx2, zyx3, zyx4, 
      zyx5, ts, dr)
    values (#{id,jdbcType=INTEGER}, #{customerid,jdbcType=INTEGER}, #{goodsid,jdbcType=INTEGER}, 
      #{unit,jdbcType=VARCHAR}, #{sequence,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}, 
      #{money,jdbcType=DECIMAL}, #{lastdate,jdbcType=DATE}, #{createuser,jdbcType=INTEGER}, 
      #{createtime,jdbcType=DATE}, #{updateuser,jdbcType=INTEGER}, #{updatetime,jdbcType=DATE}, 
      #{zyx1,jdbcType=DECIMAL}, #{zyx2,jdbcType=DECIMAL}, #{zyx3,jdbcType=INTEGER}, #{zyx4,jdbcType=VARCHAR}, 
      #{zyx5,jdbcType=VARCHAR}, #{ts,jdbcType=VARCHAR}, #{dr,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dsh.m.model.CustomerGoods">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 30 16:44:39 CST 2015.
    -->
    insert into customer_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerid != null">
        customerid,
      </if>
      <if test="goodsid != null">
        goodsid,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="sequence != null">
        sequence,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="lastdate != null">
        lastdate,
      </if>
      <if test="createuser != null">
        createuser,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updateuser != null">
        updateuser,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="zyx1 != null">
        zyx1,
      </if>
      <if test="zyx2 != null">
        zyx2,
      </if>
      <if test="zyx3 != null">
        zyx3,
      </if>
      <if test="zyx4 != null">
        zyx4,
      </if>
      <if test="zyx5 != null">
        zyx5,
      </if>
      <if test="ts != null">
        ts,
      </if>
      <if test="dr != null">
        dr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerid != null">
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="sequence != null">
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="lastdate != null">
        #{lastdate,jdbcType=DATE},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=DATE},
      </if>
      <if test="updateuser != null">
        #{updateuser,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=DATE},
      </if>
      <if test="zyx1 != null">
        #{zyx1,jdbcType=DECIMAL},
      </if>
      <if test="zyx2 != null">
        #{zyx2,jdbcType=DECIMAL},
      </if>
      <if test="zyx3 != null">
        #{zyx3,jdbcType=INTEGER},
      </if>
      <if test="zyx4 != null">
        #{zyx4,jdbcType=VARCHAR},
      </if>
      <if test="zyx5 != null">
        #{zyx5,jdbcType=VARCHAR},
      </if>
      <if test="ts != null">
        #{ts,jdbcType=VARCHAR},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dsh.m.model.CustomerGoodsExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 30 16:44:39 CST 2015.
    -->
    select count(*) from customer_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 30 16:44:39 CST 2015.
    -->
    update customer_goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.customerid != null">
        customerid = #{record.customerid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsid != null">
        goodsid = #{record.goodsid,jdbcType=INTEGER},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.sequence != null">
        sequence = #{record.sequence,jdbcType=INTEGER},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.lastdate != null">
        lastdate = #{record.lastdate,jdbcType=DATE},
      </if>
      <if test="record.createuser != null">
        createuser = #{record.createuser,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=DATE},
      </if>
      <if test="record.updateuser != null">
        updateuser = #{record.updateuser,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=DATE},
      </if>
      <if test="record.zyx1 != null">
        zyx1 = #{record.zyx1,jdbcType=DECIMAL},
      </if>
      <if test="record.zyx2 != null">
        zyx2 = #{record.zyx2,jdbcType=DECIMAL},
      </if>
      <if test="record.zyx3 != null">
        zyx3 = #{record.zyx3,jdbcType=INTEGER},
      </if>
      <if test="record.zyx4 != null">
        zyx4 = #{record.zyx4,jdbcType=VARCHAR},
      </if>
      <if test="record.zyx5 != null">
        zyx5 = #{record.zyx5,jdbcType=VARCHAR},
      </if>
      <if test="record.ts != null">
        ts = #{record.ts,jdbcType=VARCHAR},
      </if>
      <if test="record.dr != null">
        dr = #{record.dr,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 30 16:44:39 CST 2015.
    -->
    update customer_goods
    set id = #{record.id,jdbcType=INTEGER},
      customerid = #{record.customerid,jdbcType=INTEGER},
      goodsid = #{record.goodsid,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=VARCHAR},
      sequence = #{record.sequence,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DECIMAL},
      lastdate = #{record.lastdate,jdbcType=DATE},
      createuser = #{record.createuser,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=DATE},
      updateuser = #{record.updateuser,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=DATE},
      zyx1 = #{record.zyx1,jdbcType=DECIMAL},
      zyx2 = #{record.zyx2,jdbcType=DECIMAL},
      zyx3 = #{record.zyx3,jdbcType=INTEGER},
      zyx4 = #{record.zyx4,jdbcType=VARCHAR},
      zyx5 = #{record.zyx5,jdbcType=VARCHAR},
      ts = #{record.ts,jdbcType=VARCHAR},
      dr = #{record.dr,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>